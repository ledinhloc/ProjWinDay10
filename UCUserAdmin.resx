<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="txtTim.IconLeft" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>